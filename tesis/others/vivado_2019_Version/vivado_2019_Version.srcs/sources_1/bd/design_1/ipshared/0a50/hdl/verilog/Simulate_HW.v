// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Simulate_HW,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=6.061600,HLS_SYN_LAT=52781,HLS_SYN_TPT=52782,HLS_SYN_MEM=0,HLS_SYN_DSP=156,HLS_SYN_FF=26349,HLS_SYN_LUT=32278}" *)

module Simulate_HW (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        input_r_TDATA,
        input_r_TLAST,
        output_r_TDATA,
        output_r_TLAST,
        input_r_TVALID,
        input_r_TREADY,
        output_r_TVALID,
        output_r_TREADY
);

parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [31:0] input_r_TDATA;
input  [0:0] input_r_TLAST;
output  [31:0] output_r_TDATA;
output  [0:0] output_r_TLAST;
input   input_r_TVALID;
output   input_r_TREADY;
output   output_r_TVALID;
input   output_r_TREADY;

reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [31:0] size;
wire    Loop_ROW_LOOP_proc_U0_ap_start;
wire    Loop_ROW_LOOP_proc_U0_ap_done;
wire    Loop_ROW_LOOP_proc_U0_ap_continue;
wire    Loop_ROW_LOOP_proc_U0_ap_idle;
wire    Loop_ROW_LOOP_proc_U0_ap_ready;
wire    Loop_ROW_LOOP_proc_U0_input_r_TREADY;
wire   [31:0] Loop_ROW_LOOP_proc_U0_output_r_TDATA;
wire    Loop_ROW_LOOP_proc_U0_output_r_TVALID;
wire   [0:0] Loop_ROW_LOOP_proc_U0_output_r_TLAST;
wire    ap_hs_continue;
wire    ap_hs_done;
wire    ap_hs_ready;

Simulate_HW_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
Simulate_HW_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .size(size)
);

Loop_ROW_LOOP_proc Loop_ROW_LOOP_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_ROW_LOOP_proc_U0_ap_start),
    .ap_done(Loop_ROW_LOOP_proc_U0_ap_done),
    .ap_continue(Loop_ROW_LOOP_proc_U0_ap_continue),
    .ap_idle(Loop_ROW_LOOP_proc_U0_ap_idle),
    .ap_ready(Loop_ROW_LOOP_proc_U0_ap_ready),
    .size(size),
    .input_r_TDATA(input_r_TDATA),
    .input_r_TVALID(input_r_TVALID),
    .input_r_TREADY(Loop_ROW_LOOP_proc_U0_input_r_TREADY),
    .input_r_TLAST(input_r_TLAST),
    .output_r_TDATA(Loop_ROW_LOOP_proc_U0_output_r_TDATA),
    .output_r_TVALID(Loop_ROW_LOOP_proc_U0_output_r_TVALID),
    .output_r_TREADY(output_r_TREADY),
    .output_r_TLAST(Loop_ROW_LOOP_proc_U0_output_r_TLAST)
);

assign Loop_ROW_LOOP_proc_U0_ap_continue = 1'b1;

assign Loop_ROW_LOOP_proc_U0_ap_start = ap_start;

assign ap_done = Loop_ROW_LOOP_proc_U0_ap_done;

assign ap_hs_continue = 1'b1;

assign ap_hs_done = Loop_ROW_LOOP_proc_U0_ap_done;

assign ap_hs_ready = Loop_ROW_LOOP_proc_U0_ap_ready;

assign ap_idle = Loop_ROW_LOOP_proc_U0_ap_idle;

assign ap_ready = Loop_ROW_LOOP_proc_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign input_r_TREADY = Loop_ROW_LOOP_proc_U0_input_r_TREADY;

assign output_r_TDATA = Loop_ROW_LOOP_proc_U0_output_r_TDATA;

assign output_r_TLAST = Loop_ROW_LOOP_proc_U0_output_r_TLAST;

assign output_r_TVALID = Loop_ROW_LOOP_proc_U0_output_r_TVALID;

endmodule //Simulate_HW
